/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accessTokensIssueAccessToken } from "../funcs/accessTokensIssueAccessToken.js";
import { accessTokensListAccessTokens } from "../funcs/accessTokensListAccessTokens.js";
import { accessTokensRevokeAccessToken } from "../funcs/accessTokensRevokeAccessToken.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class AccessTokens extends ClientSDK {
  /**
   * List access tokens.
   */
  async listAccessTokens(
    request: operations.ListAccessTokensRequest,
    options?: RequestOptions,
  ): Promise<components.ListAccessTokensResponse> {
    return unwrapAsync(accessTokensListAccessTokens(
      this,
      request,
      options,
    ));
  }

  /**
   * Issue a new access token.
   */
  async issueAccessToken(
    request: components.AccessTokenInfo,
    options?: RequestOptions,
  ): Promise<components.IssueAccessTokenResponse> {
    return unwrapAsync(accessTokensIssueAccessToken(
      this,
      request,
      options,
    ));
  }

  /**
   * Revoke an access token.
   */
  async revokeAccessToken(
    request: operations.RevokeAccessTokenRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(accessTokensRevokeAccessToken(
      this,
      request,
      options,
    ));
  }
}
