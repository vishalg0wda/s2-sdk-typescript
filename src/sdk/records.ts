/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { recordsAppend } from "../funcs/recordsAppend.js";
import { recordsCheckTail } from "../funcs/recordsCheckTail.js";
import { ReadAcceptEnum, recordsRead } from "../funcs/recordsRead.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { ReadAcceptEnum } from "../funcs/recordsRead.js";

export class Records extends ClientSDK {
  /**
   * Retrieve records.
   *
   * @remarks
   * Retrieve a batch of records, or set `Accept: text/event-stream` to stream using server-sent events.
   */
  async read(
    request: operations.ReadRequest,
    options?: RequestOptions & { acceptHeaderOverride?: ReadAcceptEnum },
  ): Promise<operations.ReadResponse> {
    return unwrapAsync(recordsRead(
      this,
      request,
      options,
    ));
  }

  /**
   * Append records.
   *
   * @remarks
   * Append a batch of records to a stream.
   */
  async append(
    request: operations.AppendRequest,
    options?: RequestOptions,
  ): Promise<components.AppendAck> {
    return unwrapAsync(recordsAppend(
      this,
      request,
      options,
    ));
  }

  /**
   * Check the tail.
   *
   * @remarks
   * Check the tail of a stream.
   */
  async checkTail(
    request: operations.CheckTailRequest,
    options?: RequestOptions,
  ): Promise<components.TailResponse> {
    return unwrapAsync(recordsCheckTail(
      this,
      request,
      options,
    ));
  }
}
