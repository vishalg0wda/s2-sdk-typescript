/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { metricsAccountMetrics } from "../funcs/metricsAccountMetrics.js";
import { metricsBasinMetrics } from "../funcs/metricsBasinMetrics.js";
import { metricsStreamMetrics } from "../funcs/metricsStreamMetrics.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Metrics extends ClientSDK {
  /**
   * Account-level metrics.
   */
  async accountMetrics(
    request: operations.AccountMetricsRequest,
    options?: RequestOptions,
  ): Promise<components.MetricSetResponse> {
    return unwrapAsync(metricsAccountMetrics(
      this,
      request,
      options,
    ));
  }

  /**
   * Basin-level metrics.
   */
  async basinMetrics(
    request: operations.BasinMetricsRequest,
    options?: RequestOptions,
  ): Promise<components.MetricSetResponse> {
    return unwrapAsync(metricsBasinMetrics(
      this,
      request,
      options,
    ));
  }

  /**
   * Stream-level metrics.
   */
  async streamMetrics(
    request: operations.StreamMetricsRequest,
    options?: RequestOptions,
  ): Promise<components.MetricSetResponse> {
    return unwrapAsync(metricsStreamMetrics(
      this,
      request,
      options,
    ));
  }
}
