/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type ReadWritePermissions = {
  /**
   * Read permission.
   */
  read?: boolean | undefined;
  /**
   * Write permission.
   */
  write?: boolean | undefined;
};

/** @internal */
export const ReadWritePermissions$inboundSchema: z.ZodType<
  ReadWritePermissions,
  z.ZodTypeDef,
  unknown
> = z.object({
  read: z.boolean().default(false),
  write: z.boolean().default(false),
});

/** @internal */
export type ReadWritePermissions$Outbound = {
  read: boolean;
  write: boolean;
};

/** @internal */
export const ReadWritePermissions$outboundSchema: z.ZodType<
  ReadWritePermissions$Outbound,
  z.ZodTypeDef,
  ReadWritePermissions
> = z.object({
  read: z.boolean().default(false),
  write: z.boolean().default(false),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReadWritePermissions$ {
  /** @deprecated use `ReadWritePermissions$inboundSchema` instead. */
  export const inboundSchema = ReadWritePermissions$inboundSchema;
  /** @deprecated use `ReadWritePermissions$outboundSchema` instead. */
  export const outboundSchema = ReadWritePermissions$outboundSchema;
  /** @deprecated use `ReadWritePermissions$Outbound` instead. */
  export type Outbound = ReadWritePermissions$Outbound;
}

export function readWritePermissionsToJSON(
  readWritePermissions: ReadWritePermissions,
): string {
  return JSON.stringify(
    ReadWritePermissions$outboundSchema.parse(readWritePermissions),
  );
}

export function readWritePermissionsFromJSON(
  jsonString: string,
): SafeParseResult<ReadWritePermissions, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ReadWritePermissions$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReadWritePermissions' from JSON`,
  );
}
