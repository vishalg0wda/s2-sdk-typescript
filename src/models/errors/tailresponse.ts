/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as components from "../components/index.js";
import { S2Error } from "./s2error.js";

export type TailResponseData = {
  /**
   * Position of a record in a stream.
   */
  tail: components.StreamPosition;
};

export class TailResponse extends S2Error {
  /**
   * Position of a record in a stream.
   */
  tail: components.StreamPosition;

  /** The original data that was passed to this error instance. */
  data$: TailResponseData;

  constructor(
    err: TailResponseData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = "message" in err && typeof err.message === "string"
      ? err.message
      : `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.tail = err.tail;

    this.name = "TailResponse";
  }
}

/** @internal */
export const TailResponse$inboundSchema: z.ZodType<
  TailResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  tail: components.StreamPosition$inboundSchema,
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new TailResponse(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type TailResponse$Outbound = {
  tail: components.StreamPosition$Outbound;
};

/** @internal */
export const TailResponse$outboundSchema: z.ZodType<
  TailResponse$Outbound,
  z.ZodTypeDef,
  TailResponse
> = z.instanceof(TailResponse)
  .transform(v => v.data$)
  .pipe(z.object({
    tail: components.StreamPosition$outboundSchema,
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TailResponse$ {
  /** @deprecated use `TailResponse$inboundSchema` instead. */
  export const inboundSchema = TailResponse$inboundSchema;
  /** @deprecated use `TailResponse$outboundSchema` instead. */
  export const outboundSchema = TailResponse$outboundSchema;
  /** @deprecated use `TailResponse$Outbound` instead. */
  export type Outbound = TailResponse$Outbound;
}
