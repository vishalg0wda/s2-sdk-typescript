/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetBasinConfigRequest = {
  /**
   * Basin name, which must be globally unique.
   *
   * @remarks
   * The name must be between 8 and 48 characters, comprising lowercase
   * letters, numbers and hyphens. It cannot begin or end with a hyphen.
   */
  basin: string;
};

/** @internal */
export const GetBasinConfigRequest$inboundSchema: z.ZodType<
  GetBasinConfigRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  basin: z.string(),
});

/** @internal */
export type GetBasinConfigRequest$Outbound = {
  basin: string;
};

/** @internal */
export const GetBasinConfigRequest$outboundSchema: z.ZodType<
  GetBasinConfigRequest$Outbound,
  z.ZodTypeDef,
  GetBasinConfigRequest
> = z.object({
  basin: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBasinConfigRequest$ {
  /** @deprecated use `GetBasinConfigRequest$inboundSchema` instead. */
  export const inboundSchema = GetBasinConfigRequest$inboundSchema;
  /** @deprecated use `GetBasinConfigRequest$outboundSchema` instead. */
  export const outboundSchema = GetBasinConfigRequest$outboundSchema;
  /** @deprecated use `GetBasinConfigRequest$Outbound` instead. */
  export type Outbound = GetBasinConfigRequest$Outbound;
}

export function getBasinConfigRequestToJSON(
  getBasinConfigRequest: GetBasinConfigRequest,
): string {
  return JSON.stringify(
    GetBasinConfigRequest$outboundSchema.parse(getBasinConfigRequest),
  );
}

export function getBasinConfigRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetBasinConfigRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBasinConfigRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBasinConfigRequest' from JSON`,
  );
}
