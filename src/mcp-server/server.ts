/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { McpServer } from "@modelcontextprotocol/sdk/server/mcp.js";
import { S2Core } from "../core.js";
import { SDKOptions } from "../lib/config.js";
import type { ConsoleLogger } from "./console-logger.js";
import { createRegisterPrompt } from "./prompts.js";
import {
  createRegisterResource,
  createRegisterResourceTemplate,
} from "./resources.js";
import { MCPScope } from "./scopes.js";
import { createRegisterTool } from "./tools.js";
import { tool$accessTokensIssueAccessToken } from "./tools/accessTokensIssueAccessToken.js";
import { tool$accessTokensListAccessTokens } from "./tools/accessTokensListAccessTokens.js";
import { tool$accessTokensRevokeAccessToken } from "./tools/accessTokensRevokeAccessToken.js";
import { tool$basinsCreateBasin } from "./tools/basinsCreateBasin.js";
import { tool$basinsCreateOrReconfigureBasin } from "./tools/basinsCreateOrReconfigureBasin.js";
import { tool$basinsDeleteBasin } from "./tools/basinsDeleteBasin.js";
import { tool$basinsGetBasinConfig } from "./tools/basinsGetBasinConfig.js";
import { tool$basinsListBasins } from "./tools/basinsListBasins.js";
import { tool$basinsReconfigureBasin } from "./tools/basinsReconfigureBasin.js";
import { tool$recordsAppend } from "./tools/recordsAppend.js";
import { tool$recordsCheckTail } from "./tools/recordsCheckTail.js";
import { tool$recordsRead } from "./tools/recordsRead.js";
import { tool$streamsCreateOrReconfigureStream } from "./tools/streamsCreateOrReconfigureStream.js";
import { tool$streamsCreateStream } from "./tools/streamsCreateStream.js";
import { tool$streamsDeleteStream } from "./tools/streamsDeleteStream.js";
import { tool$streamsGetStreamConfig } from "./tools/streamsGetStreamConfig.js";
import { tool$streamsListStreams } from "./tools/streamsListStreams.js";
import { tool$streamsReconfigureStream } from "./tools/streamsReconfigureStream.js";

export function createMCPServer(deps: {
  logger: ConsoleLogger;
  allowedTools?: string[] | undefined;
  scopes?: MCPScope[] | undefined;
  serverURL?: string | undefined;
  accessToken?: SDKOptions["accessToken"] | undefined;
  serverIdx?: SDKOptions["serverIdx"] | undefined;
}) {
  const server = new McpServer({
    name: "S2",
    version: "0.13.3",
  });

  const client = new S2Core({
    accessToken: deps.accessToken,
    serverURL: deps.serverURL,
    serverIdx: deps.serverIdx,
  });

  const scopes = new Set(deps.scopes);

  const allowedTools = deps.allowedTools && new Set(deps.allowedTools);
  const tool = createRegisterTool(
    deps.logger,
    server,
    client,
    scopes,
    allowedTools,
  );
  const resource = createRegisterResource(deps.logger, server, client, scopes);
  const resourceTemplate = createRegisterResourceTemplate(
    deps.logger,
    server,
    client,
    scopes,
  );
  const prompt = createRegisterPrompt(deps.logger, server, client, scopes);
  const register = { tool, resource, resourceTemplate, prompt };
  void register; // suppress unused warnings

  tool(tool$accessTokensListAccessTokens);
  tool(tool$accessTokensIssueAccessToken);
  tool(tool$accessTokensRevokeAccessToken);
  tool(tool$basinsListBasins);
  tool(tool$basinsCreateBasin);
  tool(tool$basinsGetBasinConfig);
  tool(tool$basinsCreateOrReconfigureBasin);
  tool(tool$basinsDeleteBasin);
  tool(tool$basinsReconfigureBasin);
  tool(tool$streamsListStreams);
  tool(tool$streamsCreateStream);
  tool(tool$streamsGetStreamConfig);
  tool(tool$streamsCreateOrReconfigureStream);
  tool(tool$streamsDeleteStream);
  tool(tool$streamsReconfigureStream);
  tool(tool$recordsRead);
  tool(tool$recordsAppend);
  tool(tool$recordsCheckTail);

  return server;
}
